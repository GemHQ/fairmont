// Generated by CoffeeScript 1.9.3
(function() {
  var $, _module, array, assert, crypto, fs, i, len, modules, object, string, type;

  $ = {};

  $.w = function(string) {
    return string.trim().split(/\s+/);
  };

  $.to = function(to, from) {
    if (from instanceof to) {
      return from;
    } else {
      return new to(from);
    }
  };

  $.abort = function() {
    return process.exit(-1);
  };

  $.memoize = function(fn, hash) {
    var memo;
    if (hash == null) {
      hash = function(object) {
        return object.toString();
      };
    }
    memo = {};
    return function(thing) {
      var name;
      return memo[name = hash(thing)] != null ? memo[name] : memo[name] = fn(thing);
    };
  };


  /* timer */

  $.timer = function(wait, action) {
    var id;
    id = setTimeout(action, wait);
    return function() {
      return clearTimeout(id);
    };
  };

  fs = require('./fs');

  array = require('./array');

  assert = require('./assert');

  crypto = require('./crypto');

  object = require('./object');

  string = require('./string');

  type = require('./type');

  modules = [fs, array, assert, crypto, object, string, type];

  for (i = 0, len = modules.length; i < len; i++) {
    _module = modules[i];
    object.include($, _module);
  }

  module.exports = $;

}).call(this);
