// Generated by CoffeeScript 1.7.1
(function() {
  var assert, type;

  assert = require("assert");

  type = require("./type").type;

  assert.type = function(value, string) {
    return assert.equal(type(value), string);
  };

  assert.keys = function(object, keys) {
    assert.type(object, "object");
    return assert.deepEqual(Object.keys(object).sort(), keys.sort());
  };

  assert.hasKeys = function(object, keys) {
    var key, _i, _len, _results;
    assert.type(object, "object");
    _results = [];
    for (_i = 0, _len = keys.length; _i < _len; _i++) {
      key = keys[_i];
      _results.push(assert.ok(object[key] != null));
    }
    return _results;
  };

  assert.partialEqual = function(actual, expected) {
    var key, val, _results;
    assert.type(actual, "object");
    _results = [];
    for (key in expected) {
      val = expected[key];
      _results.push(assert.deepEqual(actual[key], val));
    }
    return _results;
  };

  module.exports = {};

}).call(this);
