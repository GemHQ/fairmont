// Generated by CoffeeScript 1.9.3
(function() {
  var assert, type;

  assert = require("assert");

  type = require("./type");

  assert.type = function(value, string) {
    return assert.equal(type(value), string);
  };

  assert.keys = function(object, keys) {
    assert.type(object, "object");
    return assert.deepEqual(Object.keys(object).sort(), keys.sort());
  };

  assert.hasKeys = function(object, keys) {
    var i, key, len, results;
    assert.type(object, "object");
    results = [];
    for (i = 0, len = keys.length; i < len; i++) {
      key = keys[i];
      results.push(assert.ok(object[key] != null));
    }
    return results;
  };

  assert.partialEqual = function(actual, expected) {
    var key, results, val;
    assert.type(actual, "object");
    results = [];
    for (key in expected) {
      val = expected[key];
      results.push(assert.deepEqual(actual[key], val));
    }
    return results;
  };

  module.exports = {};

}).call(this);
